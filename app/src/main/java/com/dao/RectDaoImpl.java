package com.dao;

import android.content.Context;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Point;

import androidx.annotation.NonNull;

import com.rect.SpeakingRect;

import java.util.ArrayList;
import java.util.List;

/**
 * Instantiating constructor must be called for 2 arg db storage
 * //TODO try to fix the explicit constructor call - may not be designed this way - paint
 * //TODO and rect are not persisted and the constructor needs to be called explicitly = force all fields to be persisted?
 */
public class RectDaoImpl {

    private  RectDatabase appDb;//TODo null checks? - only 1 for now

    public RectDaoImpl(Context context){
        appDb = (RectDatabase) RectDatabase.getInstance(context);
    }

    public List<SpeakingRect> getAllRects(){
        List<SpeakingRect> allRectsFromDB = appDb.rectDao().getAllRects();
        List<SpeakingRect> allRectsOfAPicResult = new ArrayList<>();
        for (SpeakingRect rect : allRectsFromDB){
            allRectsOfAPicResult.add(new SpeakingRect(rect.getId(),rect.getPicName(),rect.getPoint(),rect.getPaint()));
        }
        return allRectsOfAPicResult;
    }

    /**
     * System.out.println("Alpha " + caters.get(0).getAlpha() + " Alpha from paint " +caters.get(0).getPaint().getAlpha() );
     * //TODO due to room persistence not able to hold objects, constructors that initialize default values must be called
     * @param picName
     * @return
     */
    public List<SpeakingRect> getAllRectsOfAPic(String picName){
        List<SpeakingRect> allRectsOfAPicFromDB = appDb.rectDao().getAllRectsOfAPic(picName);
        List<SpeakingRect> allRectsOfAPicResult = new ArrayList<>();
        for (SpeakingRect rect : allRectsOfAPicFromDB){
            allRectsOfAPicResult.add(new SpeakingRect(rect.getId(),rect.getPicName(),rect.getPoint(),rect.getPaint()));
        }
        return allRectsOfAPicResult;

    }

    public SpeakingRect getRect(String picName, Point point){
        SpeakingRect rect = appDb.rectDao().getRect(picName, point);//rect with 2 values filled
        return new SpeakingRect(rect.getId(),rect.getPicName(),rect.getPoint(),rect.getPaint());//rect with all values filled from the constructor
    }

    public void insertRect(String picName, Point point){ // id is autogenerated - pass 0 as not set
        if(picName != null){
            Paint paint = new Paint();//default paint
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(Color.RED);
            paint.setStrokeWidth(3);
            paint.setAlpha(100);
            appDb.rectDao().insertRect(new SpeakingRect(0,picName,point,paint));//call constructor for default values
        }
    }

    //TODO basic update only - picName and point
    public void updateRect(int id, String picName, Point point){
        appDb.rectDao().updateRect(id, picName, point);
    }

    public void deleteAllRectsOfAPic(String picName){
        appDb.rectDao().deleteAllRectsOfAPic(picName);
    }

    public void deleteRect(String picName, Point point){
        appDb.rectDao().deleteRect(picName, point);
    }

    public void deleteAll(){
        appDb.rectDao().deleteAll();
    }






}
